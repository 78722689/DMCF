CMAKE_MINIMUM_REQUIRED(VERSION 2.6) 

PROJECT(DMCF)


#To support c++11
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0x)
if(COMPILER_SUPPORTS_CXX11)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -std=gnu++11")
elseif(COMPILER_SUPPORTS_CXX0x)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x -std=gnu++0x")
else()
	message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please update the C++ compiler.")
endif()


SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/output/bin/)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/output/lib/)

#INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/os/interface)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/ThreadManager/include)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/interface)
#INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/MsgDispatcher/include)

LINK_DIRECTORIES(${FRAMEWORK_BINARY_DIR}/ThreadManager)
LINK_DIRECTORIES(${FRAMEWORK_BINARY_DIR}/MsgDispatcher)

ADD_SUBDIRECTORY(ThreadManager)
ADD_SUBDIRECTORY(MsgDispatcher)

AUX_SOURCE_DIRECTORY(. SOURCE_MAIN)

ADD_EXECUTABLE(DMCF ${SOURCE_MAIN})
TARGET_LINK_LIBRARIES(DMCF ThreadManager)
TARGET_LINK_LIBRARIES(DMCF MsgDispatcher)
TARGET_LINK_LIBRARIES(DMCF pthread)

